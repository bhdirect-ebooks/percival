{
    "env": {
        "es6": true,
        "node": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
        "ecmaVersion": 7,
        "ecmaFeatures": {
            "jsx": false
        },
        "experimentalObjectRestSpread": true,
        "sourceType": "module"
    },
    "rules": {
        ////////// Possible Errors //////////

        "for-direction": 1, // enforce “for” loop update clause moving the counter in the right direction
        "getter-return": 1, // enforce return statements in getters
        "no-await-in-loop": 0, // disallow await inside of loops
        "no-compare-neg-zero": 2, // disallow comparing against -0
        "no-cond-assign": 0, // disallow assignment in conditional expressions
        "no-console": 0, // disallow use of console
        "no-constant-condition": 0, // disallow use of constant expressions in conditions
        "no-control-regex": 1, // disallow control characters in regular expressions
        "no-debugger": 0, // disallow use of debugger
        "no-dupe-args": 2, // disallow duplicate arguments in functions
        "no-dupe-keys": 2, // disallow duplicate keys when creating object literals
        "no-duplicate-case": 2, // disallow a duplicate case label
        "no-empty": 0, // disallow empty statements
        "no-empty-character-class": 1, // disallow the use of empty character classes in regular expressions
        "no-ex-assign": 2, // disallow assigning to the exception in a catch block
        "no-extra-boolean-cast": 2, // disallow double-negation boolean casts in a boolean context
        "no-extra-parens": 2, // disallow unnecessary parentheses
        "no-extra-semi": 2, // disallow unnecessary semicolons
        "no-func-assign": 2, // disallow overwriting functions written as function declarations
        "no-inner-declarations": 1, // disallow function or variable declarations in nested blocks
        "no-invalid-regexp": 2, // disallow invalid regular expression strings in the RegExp constructor
        "no-irregular-whitespace": 1, // disallow irregular whitespace outside of strings and comments
        "no-obj-calls": 2, // disallow the use of object properties of the global object (Math and JSON) as functions
        "no-prototype-builtins": 0, // disallow calling some Object.prototype methods directly on objects
        "no-regex-spaces": 0, // disallow multiple spaces in a regular expression literal
        "no-sparse-arrays": 2, // disallow sparse arrays
        "no-template-curly-in-string": 2, // disallow template literal placeholder syntax in regular strings
        "no-unexpected-multiline": 2, // Avoid code that looks like two expressions but is actually one
        "no-unreachable": 2, // disallow unreachable statements after a return, throw, continue, or break statement
        "no-unsafe-finally": 2, // disallow control flow statements in finally blocks
        "no-unsafe-negation": 2, // disallow negating the left operand of relational operators
        "use-isnan": 2, // disallow comparisons with the value NaN
        "valid-jsdoc": 1, // Ensure JSDoc comments are valid
        "valid-typeof": 2, // Ensure that the results of typeof are compared against a valid string


        ////////// Best Practices //////////

        "accessor-pairs": 0, // enforces getter/setter pairs in objects
        "array-callback-return": 2, // enforce return statements in callbacks of array methods
        "block-scoped-var": 2, // treat var statements as if they were block scoped
        "class-methods-use-this": 2, // enforce that class methods utilize this
        "complexity": 0, // specify the maximum cyclomatic complexity allowed in a program
        "consistent-return": 2, // require return statements to either always or never specify values
        "curly": 0, // specify curly brace conventions for all control statements
        "default-case": 2, // require default case in switch statements
        "dot-location": [2, "property"], // enforces consistent newlines before or after dots
        "dot-notation": 2, // encourages use of dot notation whenever possible
        "eqeqeq": 2, // require the use of === and !==
        "guard-for-in": 2, // make sure for-in loops have an if statement
        "no-alert": 2, // disallow the use of alert, confirm, and prompt
        "no-caller": 2, // disallow use of arguments.caller or arguments.callee
        "no-div-regex": 2, // disallow division operators explicitly at beginning of regular expression
        "no-else-return": 0, // disallow else after a return in an if
        "no-empty-function": 2, // disallow empty functions
        "no-empty-pattern": 2, // disallow empty destructuring patterns
        "no-eq-null": 2, // disallow comparisons to null without a type-checking operator
        "no-eval": 2, // disallow use of eval()
        "no-extend-native": 0, // disallow adding to native types
        "no-extra-bind": 2, // disallow unnecessary function binding
        "no-extra-label": 2, // disallow unnecessary labels
        "no-fallthrough": 2, // disallow fallthrough of case statements
        "no-floating-decimal": 2, // disallow the use of leading or trailing decimal points in numeric literals
        "no-global-assign": 2, // disallow assignment to native objects or read-only global variables
        "no-implicit-coercion": 0, // disallow shorthand type conversions
        "no-implicit-globals": 1, // disallow variable and function declarations in the global scope
        "no-implied-eval": 2, // disallow use of eval()-like methods
        "no-iterator": 2, // disallow usage of __iterator__ property
        "no-labels": 2, // disallow labeled statements
        "no-lone-blocks": 2, // disallow unnecessary nested blocks
        "no-loop-func": 0, // disallow creation of functions within loops
        "no-magic-numbers": 0, // disallow magic numbers
        "no-multi-spaces": 0, // disallow use of multiple spaces
        "no-multi-str": 2, // disallow use of multiline strings
        "no-new": 2, // disallow use of new operator when not part of the assignment or comparison
        "no-new-func": 2, // disallow use of new operator for Function object
        "no-new-wrappers": 2, // disallows creating new instances of String, Number, and Boolean
        "no-octal": 2, // disallow use of octal literals
        "no-octal-escape": 2, // disallow use of octal escape sequences in string literals, such as var foo = "Copyright \251";
        "no-param-reassign": 0, // disallow reassignment of function parameters
        "no-proto": 2, // disallow usage of __proto__ property
        "no-redeclare": 2, // disallow declaring the same variable more than once
        "no-restricted-properties": 2, // disallow certain properties on certain objects
        "no-return-assign": 1, // disallow use of assignment in return statement
        "no-return-await": 2, // disallow unnecessary return await
        "no-script-url": 2, // disallow use of javascript: urls
        "no-self-assign": 2, // disallow assignments where both sides are exactly the same
        "no-self-compare": 2, // disallow comparisons where both sides are exactly the same
        "no-sequences": 2, // disallow use of comma operator
        "no-throw-literal": 2, // restrict what can be thrown as an exception
        "no-unmodified-loop-condition": 2, // disallow unmodified loop conditions
        "no-unused-expressions": 2, // disallow usage of expressions in statement position
        "no-unused-labels": 2, // disallow unused labels
        "no-useless-call": 2, // disallow unnecessary calls to .call() and .apply()
        "no-useless-concat": 2, // disallow unnecessary concatenation of literals or template literals
        "no-useless-escape": 2, // disallow unnecessary escape characters
        "no-useless-return": 2, // disallow redundant return statements
        "no-void": 2, // disallow use of void operator
        "no-warning-comments": 0, // disallow usage of configurable warning terms in comments, e.g. TODO or FIXME
        "no-with": 2, // disallow use of the with statement
        "prefer-promise-reject-errors": 0, // require using Error objects as Promise rejection reasons
        "radix": 0, // require use of the second argument for parseInt()
        "require-await": 2, // disallow async functions which have no await expression
        "vars-on-top": 0, // requires to declare all vars on top of their containing scope
        "wrap-iife": 0, // require immediate function invocation to be wrapped in parentheses
        "yoda": 2, // require or disallow Yoda conditions


        ////////// Strict Mode //////////

        "strict": 1, // controls location of Use Strict Directives


        ////////// Variables //////////

        "init-declarations": 0, // require or disallow initialization in variable declarations
        "no-catch-shadow": 2, // disallow catch clause parameters from shadowing variables in the outer scope
        "no-delete-var": 2, // disallow deletion of variables
        "no-label-var": 2, // disallow labels that share a name with a variable
        "no-restricted-globals": 2, // disallow specified global variables
        "no-shadow": 2, // disallow declaration of variables already declared in the outer scope
        "no-shadow-restricted-names": 2, // disallow shadowing of names such as arguments
        "no-undef": 2, // disallow use of undeclared variables unless mentioned in a /*global */ block
        "no-undef-init": 0, // disallow use of undefined when initializing variables
        "no-undefined": 0, // disallow use of undefined variable
        "no-unused-vars": 2, // disallow declaration of variables that are not used in the code
        "no-use-before-define": 2, // disallow use of variables before they are defined


        ////////// Node.js and CommonJS //////////

        "callback-return": 2, // require return statements after callbacks
        "global-require": 2, // require require() calls to be placed at top-level module scope
        "handle-callback-err": 0, // enforces error handling in callbacks
        "no-buffer-constructor": 2, // disallow use of the Buffer() constructor
        "no-mixed-requires": 2, // disallow require calls to be mixed with regular variable declarations
        "no-new-require": 2, // disallow new operators with calls to require
        "no-path-concat": 0, // disallow string concatenation with __dirname and __filename
        "no-process-env": 0, // disallow use of process.env
        "no-process-exit": 2, // disallow process.exit()
        "no-restricted-modules": 0, // restrict usage of specified node modules
        "no-sync": 0, // disallow use of synchronous methods


        ////////// Stylistic Issues //////////

        "array-bracket-spacing": 0, // enforce spacing inside array brackets
        "brace-style": 1, // enforce one true brace style
        "camelcase": 0, // require camel case names
        "comma-dangle": 0, // require or disallow trailing commas
        "comma-spacing": 0, // enforce spacing before and after comma
        "comma-style": 0, // enforce one true comma style
        "computed-property-spacing": 0, // require or disallow padding inside computed properties
        "consistent-this": 2, // enforces consistent naming when capturing the current execution context
        "eol-last": 2, // enforce newline at the end of file, with no multiple empty lines
        "func-names": 0, // require function expressions to have a name
        "func-style": 0, // enforces use of function declarations or expressions
        "func-call-spacing": 0, // require or disallow spacing between function identifiers and their invocations
        "indent": [1,2], // this option sets a specific tab width for your code
        "key-spacing": 2, // enforces spacing between keys and values in object literal properties
        "lines-around-comment": 0, // enforces empty lines around comments
        "max-depth": 0, // specify the maximum depth that blocks can be nested
        "max-len": 0, // specify the maximum length of a line in your program
        "max-lines": 0, // enforce a maximum number of lines per file
        "max-statements": 0, // specify the maximum number of statement allowed in a function
        "max-statements-per-line": 0, // enforce a maximum number of statements allowed per line
        "max-nested-callbacks": 0, // specify the maximum depth callbacks can be nested
        "max-params": 0, // limits the number of parameters that can be used in the function declaration.
        "linebreak-style": 2, // disallow mixed 'LF' and 'CRLF' as linebreaks
        "new-cap": 0, // require a capital letter for constructors
        "new-parens": 2, // disallow the omission of parentheses when invoking a constructor with no arguments
        "no-array-constructor": 2, // disallow use of the Array constructor
        "no-bitwise": 2, // disallow use of bitwise operators
        "no-continue": 2, // disallow use of the continue statement
        "no-inline-comments": 0, // disallow comments inline after code
        "no-lonely-if": 0, // disallow if as the only statement in an else block
        "no-mixed-spaces-and-tabs": 2, // disallow mixed spaces and tabs for indentation
        "no-multiple-empty-lines": 0, // disallow multiple empty lines
        "no-nested-ternary": 0, // disallow nested ternary expressions
        "no-new-object": 2, // disallow use of the Object constructor
        "no-plusplus": 0, // disallow use of unary operators, ++ and --
        "no-ternary": 0, // disallow the use of ternary operators
        "no-trailing-spaces": 2, // disallow trailing whitespace at the end of lines
        "no-underscore-dangle": 2, // disallow dangling underscores in identifiers
        "one-var": 0, // allow just one var statement per function
        "operator-assignment": 2, // require assignment operator shorthand where possible or prohibit it entirely
        "operator-linebreak": 0, // enforce operators to be placed before or after line breaks
        "padding-line-between-statements": 0, // require or disallow padding lines between statements
        "padded-blocks": 0, // enforce padding within blocks
        "quote-props": 0, // require quotes around object literal property names
        "quotes": 0, // specify whether double or single quotes should be used
        "semi-spacing": 0, // enforce spacing before and after semicolons
        "semi": 0, // require or disallow use of semicolons instead of ASI
        "sort-vars": 0, // sort variables within the same declaration block
        "space-before-blocks": 2, // require or disallow space before blocks
        "space-before-function-paren": 0, // require or disallow space before function opening parenthesis
        "space-in-parens": 0, // require or disallow spaces inside parentheses
        "space-infix-ops": 2, // require spaces around operators
        "keyword-spacing": 2, // enforce consistent spacing before and after keywords
        "space-unary-ops": 0, // require or disallow spaces before/after unary operators
        "spaced-comment": 1, // require or disallow a space immediately following the // or /* in a comment
        "wrap-regex": 0, // require regex literals to be wrapped in parentheses


        ////////// ECMAScript 6 //////////

        "constructor-super": 2, // verify super() callings in constructors
        "generator-star-spacing": 2, // enforce the spacing around the * in generator functions
        "no-this-before-super": 2, // disallow to use this/super before super() calling in constructors
        "no-var": 2, // require let or const instead of var
        "object-shorthand": 2, // require method and property shorthand syntax for object literals
        "prefer-const": 1, // suggest using of const declaration for variables that are never modified after declared
        "no-const-assign": "warn"
    }
}